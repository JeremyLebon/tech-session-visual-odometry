<launch>

  <!-- flasgs -->
  <arg name="vslam"             default="true" /> <!-- vslam flag -->
  <arg name="record_bag"        default="false" /> <!-- bag record flag -->
  <arg name="play_bag"          default="false" /> <!-- run bag instead of simulation -->

  <!-- arguments -->
  <arg name="namespace"         default="/ackermann_vehicle" />
  <arg name="camera_ns"         default="stereo_camera" />
  <arg name="record_bag_prefix" default="sim_vslam_bag" /> <!-- bag record name prefix -->
  <arg name="play_bag_file"     default="datasets/gazebo/gazebo_stereo_camera.bag" /> <!-- name of bag file to run - must be located in ~/.ros -->
  <arg name="start"             default="0" /> <!-- set start time of bag file -->
  <arg name="rate"              default="1" /> <!-- set start time of bag file -->

  <!-- parameters -->
  <param name="/use_sim_time" value="true" /> <!-- must always be true with simulation and bags -->

  <!-- launch mapping node -->
  <include if="$(arg vslam)" file="$(find visual_odometry)/launch/rtabmap.launch" ns="$(arg namespace)">
    <arg name="use_sim_time"            value="true" />
    <arg name="cfg"                     value="$(find visual_odometry)/config/rtabmap_gazebo.ini" />
    <arg name="rtabmap_args"            value="--delete_db_on_start" />
    <arg name="stereo"                  value="true" />
    <arg name="visual_odometry"         value="true" />
    <arg name="approx_sync"             value="false" />
    <arg name="compressed"              value="$(arg play_bag)" />
    <arg name="frame_id"                value="base_footprint" />
    <arg name="left_image_topic"        value="/$(arg namespace)/$(arg camera_ns)/left/image_rect_color" />
    <arg name="right_image_topic"       value="/$(arg namespace)/$(arg camera_ns)/right/image_rect_color" />
    <arg name="left_camera_info_topic"  value="/$(arg namespace)/$(arg camera_ns)/left/camera_info" />
    <arg name="right_camera_info_topic" value="/$(arg namespace)/$(arg camera_ns)/right/camera_info" />
  </include>

  <!-- record bag with compressed images -->
  <node if="$(arg record_bag)" name="rosbag_recorder" pkg="rosbag" type="record" output="screen"
    args="-o $(arg record_bag_prefix) -e
    '(.*)/(left|right)/(camera_info|image_rect_color/(compressed|theora)'
    '(.*)/odom_truth'
    '/tf(|_static)'" />

  <!-- playback recorded bag file -->
  <node if="$(arg play_bag)" name="stereo_bag_player" pkg="rosbag" type="play" output="screen"
        args="$(arg play_bag_file) --clock -s $(arg start) -r $(arg rate)" />

  <!-- launch visualization node -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find visual_odometry)/rviz/stereo_odometry_config.rviz" />

  <!-- launch trajectory server for odometry -->
  <node name="trajectory_server" pkg="hector_trajectory_server" type="hector_trajectory_server" ns="$(arg namespace)">
    <param name="target_frame_name" value="map" />
    <param name="source_frame_name" value="base_link" />
    <param name="trajectory_publish_rate" value="4" />
  </node>

  <!-- launch odometry to trajectory converter for ground truth -->
  <node name="trajectory_server_ground_truth" pkg="visual_odometry" type="odom_to_path.py" ns="$(arg namespace)">
    <remap from="/eskf_odom" to="odom_truth" />
    <remap from="/path" to="trajectory_ground_truth" />
  </node>

</launch>
